1. Одиночка - паттерн, гарантирующий существование одного экземпляра объекта определенного класса.

2. Фабрика -

3. Абстрактная фабрика -

4. Адаптер - позволяет объектам с несовместимыми интерфейсами работать вместе, путем привидения их к общему интерфейсу.

Необходим в случае использования стороннеко класса, с отличающимся интерфейсом по отношению к остальному коду.
Он получает вызовы от одного объекта и переводит их в вызовы методов обернутого объекта.

5. Мост - позволяет разделить бизнесс-логику или большие классы на отдельные иерархии - абстрацкия и реализация, позволяя развивать их независимо.
Абстракция хранит ссылку на реализацию и делегирует выполнение этой самой реализации.

а. Расширение объекта в независимых плоскостях.
б. Разделение класса с различными реализациями какой-то функциональности. Чем больше класс, тем тяжее отладка (апгрейд).
в. Построение кросс-платформенных приложений.

6. Декоратор - позвоялет добавлять динамически добавлять новую функциональность (поведение), путем помещения в объект-обертку со схожим интерфейсом.

а. Добавить новое поведение на лету незаметно для кода (не меняя класс), который их использует.
б. Получаем набор мелких объектов на все случаи жизни.

7. Строитель - позволяет пошагово создавать объект, используя различные конфигурации.
8.
9.
10.
11.
12.
13.
14.
15.
16.
17.
18.
19.
20.
21.
22.
23.